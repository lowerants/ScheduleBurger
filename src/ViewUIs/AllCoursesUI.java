package ViewUIs;

import Controllers.AllCoursesController;
import Controllers.SingleCourseController;
import Models.AllCoursesTableModel;
import Models.Course;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

public class AllCoursesUI extends JFrame {

    public JPanel buttonPanel;
    public JPanel tablePanel;
    public JScrollPane tableScrollPane;
    //    public JButton newButton;
    public JButton showDetailsButton;
    public JButton doneButton;
    private JPanel mainPanel;

    public AllCoursesController controller;
    public JTable coursesTable;


    public AllCoursesUI(AllCoursesController controller) {
        setContentPane(mainPanel);
        setTitle("All Courses");
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setSize(100, 100);
        setLocationRelativeTo(null);

        ArrayList<Course> allCourses = controller.getAllCoursesList().getCourses();

        AllCoursesTableModel tableModel = new AllCoursesTableModel(allCourses);
        this.coursesTable.setModel(tableModel);

        showDetailsButton.addActionListener(new ShowDetailsButtonListener());
        doneButton.addActionListener(e -> System.exit(0));
//        newButton.addActionListener(e -> {
//            SingleCourseController singleCourseController = controller.newCourseSingleCourseController();
//        });

//        setContentPane(buttonPanel);
//        setContentPane(tableScrollPane);
//        setContentPane(coursesTable);

        this.controller = controller;
//        initComponents();
//        this.courses = controller.getListOfCourses();
//        this.course = courses.get(currentCourseNumber);
//        this.studentCourses = controller.getStudentCoursesList();
//        parseCourse(course);
//        parseStudentCourseList();
    }

    public class ShowDetailsButtonListener implements ActionListener {
        public void actionPerformed(ActionEvent e) {
            int selectedRow = coursesTable.getSelectedRow();
            if (selectedRow >= 0) {
                int modelRow = coursesTable.convertRowIndexToModel(selectedRow);
                Course selectedCourse = controller.getCourses().get(modelRow);
                new SingleCourseController(selectedCourse, controller, AllCoursesUI.this);
            } else {
                JOptionPane.showMessageDialog(AllCoursesUI.this, "Choose a course to view details.");
            }
        }
    }

//                Object obj = e.getSource();
//            if(obj == newButton) {
//                // todo: add data from text fields and make a new Course
//            }
//            else if(obj == doneButton) {
//                System.exit(0);
//            }


    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        tablePanel = new JPanel();
        tablePanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        mainPanel.add(tablePanel, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        tableScrollPane = new JScrollPane();
        tablePanel.add(tableScrollPane, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        coursesTable = new JTable();
        tableScrollPane.setViewportView(coursesTable);
        buttonPanel = new JPanel();
        buttonPanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 3, new Insets(0, 0, 0, 0), -1, -1));
        mainPanel.add(buttonPanel, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final com.intellij.uiDesigner.core.Spacer spacer1 = new com.intellij.uiDesigner.core.Spacer();
        buttonPanel.add(spacer1, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_VERTICAL, 1, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        showDetailsButton = new JButton();
        showDetailsButton.setText("Show Details or Make New Course");
        buttonPanel.add(showDetailsButton, new com.intellij.uiDesigner.core.GridConstraints(1, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        doneButton = new JButton();
        doneButton.setText("Done");
        buttonPanel.add(doneButton, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

}
